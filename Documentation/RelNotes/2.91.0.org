* Magit v2.91.0 Release Notes (unreleased)
** Breaking changes

- ~C-c C-e~ is no longer bound to ~magit-dispatch-popup~.  It is bound
  to  ~magit-edit-thing~ now, so that Forge can add section-specific
  bindings using this key.  ~magit-dispatch-popup~ continues to be
  available on ~h~, ~?~ and ~C-c C-c~.  #3659

- ~C-c C-b~ is no longer bound to ~magit-browse-thing~ to avoid a conflict
  with ~magit-go-backward~ in diff and log buffers.  ~C-c C-w~ (as in web)
  is used instead now.  #3659

** Changes since v2.90.0

- Added ~bug-reference-mode~ to ~git-commit-setup-hook~.  e19e8fb1e

- The "Version" column in ~magit-submodule-list-mode~ and
  ~magit-repolist-mode~ buffers now shows when a repository is dirty.
  0b86dbfd6

- Added new command ~magit-log-merged~.  This command requires
  ~git-when-merged~ (https://github.com/mhagger/git-when-merged).  It
  isn't bound in ~magit-log-popup~ by default.  To add it, you can use
  something like

  #+BEGIN_SRC emacs-lisp
    (magit-define-popup-action 'magit-log-popup
      ?m "Log commit's merge" 'magit-log-merged)
  #+END_SRC

  #3657

- Added new class slot ~keymap~ to allow other packages to define
  section-specific keymaps without naming them ~magit-TYPE-section-map~,
  which would mean using a symbol prefix (~magit-~) that does not match
  the package name.

** Fixes since v2.90.0

- Bumped the minimal required version of ~git-commit~ to the correct
  version.  e9bd33758

- Dropped the new "v" prefix that we started to add to release tags
  starting with the previous release in places where that prefix is
  undesirable.  f441cf6d7

- Staging and unstaging submodules while ~diff.submodule~'s value is ~log~
  broke shortly before the v2.90.0 release.  #3654

- When another window is already displaying the file buffer, then
  ~magit-display-file-buffer-other-window~ did additionally display
  it in the current window.  #3662

- ~magit-diff-type~ falsely concluded that a diff buffer showed
  unstaged changes when diffing a range where the right side resolves
  to the same commit as ~HEAD~.
